<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="logindao">
	
	<select id="generalLogin" parameterType="logindto" resultType="memberdto">
		select * from member where memberId = #{memberId}
	</select>
	
	<!-- 메일 인증을 하면 mail_auth 컬럼을 기본값 0에서 1로 바꿔 로그인을 허용 -->
	<update id="updateMailAuth" parameterType="memberdto">
	    update member set mailAuth=1 where memberEmail = #{memberEmail} and mailKey = #{mailKey}
	</update>
	
	<!-- 이메일 인증을 안 했으면 0을 반환, 로그인 시 인증했나 안 했나 체크하기 위함 -->
	<select id="emailAuthFail" parameterType="String" resultType="int">
	    select count(*) from member where memberId = #{memberId} and mailAuth = 1
	</select>
	
	<select id="snsLogincheck" parameterType="String" resultType="int">
	    select count(*) from member where memberId = #{email}
	</select>
	
	<select id="snsLogin" parameterType="String" resultType="memberdto">
		select * from member where memberId = #{email}
	</select>
	
	<select id="phoneSearchgetIdCheck" parameterType="memberdto" resultType="int">
		select count(*) from member where memberName = #{memberName} and memberBirth = #{memberBirth} and memberPhone = #{memberPhone}
	</select>
	
	<select id="emailSearchgetIdCheck" parameterType="memberdto" resultType="int">
		select count(*) from member where memberName = #{memberName} and memberBirth = #{memberBirth} and memberEmail = #{memberEmail}
	</select>
	
	<select id="getmemberonelistbyemail" parameterType="String" resultType="memberdto">
		select * from member where memberEmail = #{memberEmail}
	</select>
	
	<select id="phoneSearchGetPwdCheck" parameterType="memberdto" resultType="int">
		select count(*) from member where memberId = #{memberId} and memberName = #{memberName} and memberBirth = #{memberBirth} and memberPhone = #{memberPhone}
	</select>
	
	<select id="emailSearchGetPwdCheck" parameterType="memberdto" resultType="int">
		select count(*) from member where memberId = #{memberId} and memberName = #{memberName} and memberBirth = #{memberBirth} and memberEmail = #{memberEmail}
	</select>
	
	<select id="getmemberonelistbyId" parameterType="String" resultType="memberdto">
		select * from member where memberId = #{memberId}
	</select>
	
	<update id="pwdReset" parameterType="memberdto">
		update member set memberPwd = #{memberPwd} where memberId = #{memberId}
	</update>
</mapper>